{"version":3,"sources":["img/persik.png","panels/Start.js","panels/Vol_main.js","panels/Org_main.js","App.js","index.js","img/plus.svg"],"names":["module","exports","Start","id","go","resp","fetchedUser","className","src","persik","alt","onClick","data-to","OrgMain","plus","App","useState","activePanel","setActivePanel","setUser","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","history","axios","post","then","res","console","log","send","ReactDOM","render","getElementById"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,oC,yeCyC5BC,G,OAjCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAkBC,GAAzB,EAAWC,YAAX,EAAyBD,MAAzB,OACb,kBAAC,IAAD,CAAOF,GAAIA,GACX,yBAAKI,UAAU,WACd,yBAAKA,UAAU,eACf,yBAAKA,UAAU,MAAMC,IAAKC,IAAQC,IAAI,oBAEtC,yBAAKH,UAAU,gBACd,wBAAIA,UAAU,QAAd,kGAED,yBAAKA,UAAU,cAAcI,QAASN,GACrC,uFAED,yBAAKE,UAAU,cAAcI,QAASP,EAAIQ,UAAQ,WAAlD,iF,iBCkBaC,G,MAxBC,SAAC,GAAD,IAAGV,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,OACf,kBAAC,IAAD,CAAOD,GAAIA,GACV,yBAAKI,UAAU,WACd,yBAAKA,UAAU,gBACd,wBAAIA,UAAU,QAAd,uEAED,yBAAKA,UAAU,gBAAgBI,QAASP,EAAKQ,UAAQ,UACpD,yBAAKL,UAAU,MAAMC,IAAKM,MAC1B,wBAAIP,UAAU,UAAd,+CAED,yBAAKA,UAAU,gBAAgBI,QAASP,EAAKQ,UAAQ,UACpD,yBAAKL,UAAU,OAAOC,IAAKC,IAAQC,IAAI,mBACvC,wBAAIH,UAAU,UAAd,oDACA,wBAAIA,UAAU,SAAd,yDCUWM,EAxBC,SAAC,GAAD,IAAGV,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,OACf,kBAAC,IAAD,CAAOD,GAAIA,GACV,yBAAKI,UAAU,WACd,yBAAKA,UAAU,gBACd,wBAAIA,UAAU,QAAd,uEAED,yBAAKA,UAAU,gBAAgBI,QAASP,EAAKQ,UAAQ,UACpD,yBAAKL,UAAU,MAAMC,IAAKC,IAAQC,IAAI,mBACtC,wBAAIH,UAAU,UAAd,+CAED,yBAAKA,UAAU,gBAAgBI,QAASP,EAAKQ,UAAQ,UACpD,yBAAKL,UAAU,OAAOC,IAAKC,IAAQC,IAAI,mBACvC,wBAAIH,UAAU,UAAd,oDACA,wBAAIA,UAAU,SAAd,wD,0BCyFWQ,EAzCH,WAAO,IAAD,EACqBC,mBAAS,SAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVV,EAFU,KAEGa,EAFH,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECL,EAAQK,GAFT,4CARe,sBACfF,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMjC,EAAK,SAAAkC,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAUxC,OACC,kBAAC,IAAD,CAAMxB,YAAaA,EAAayB,QAAS,CAACzB,IACzC,kBAAC,EAAD,CAAOd,GAAG,QAAQG,YAAaA,EAAaF,GAAIA,EAAIC,KATzC,WACZsC,IAAMC,KAAK,kDAAmD,CAACtC,gBAC7DuC,MAAK,SAAAC,GACLC,QAAQC,IAAIF,SAOb,kBAAC,EAAD,CAAS3C,GAAG,UAAUC,GAAIA,IAC1B,kBAAC,EAAD,CAASD,GAAG,UAAUC,GAAIA,MCrG7BkB,IAAQ2B,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,U,wCCjBjDpD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.f04b47a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nimport persik from '../img/persik.png';\nimport './Start.css';\n\n\nconst Start = ({ id, go, fetchedUser , resp}) => (\n\t<Panel id={id}>\n\t<div className=\"Wrapper\">\n\t\t<div className=\"Img-contain\">\n\t\t<img className=\"Img\" src={persik} alt=\"Persik The Cat\"/>\n\t\t</div>\n\t\t<div className=\"Text-contain\">\n\t\t\t<h1 className=\"Text\">Сделаем мир лучше!</h1>\n\t\t</div>\n\t\t<div className=\"But-contain\" onClick={resp}>\n\t\t\t<a>Я волонтёр</a>\n\t\t</div>\n\t\t<div className=\"But-contain\" onClick={go} data-to=\"orgMain\">\n\t\t\tЯ организатор\n\t\t</div>\n\t</div>\n\t</Panel>\n);\n\nStart.propTypes = {\n\tresp: PropTypes.func.isRequired,\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Start;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n// import PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n// import Button from '@vkontakte/vkui/dist/components/Button/Button';\n// import Group from '@vkontakte/vkui/dist/components/Group/Group';\n// import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n// import Div from '@vkontakte/vkui/dist/components/Div/Div';\n// import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport persik from '../img/persik.png';\nimport plus from '../img/plus.svg'\nimport './Org_main.css';\n\nconst OrgMain = ({ id, go}) => (\n\t<Panel id={id}>\n\t\t<div className=\"Wrapper\">\n\t\t\t<div className=\"Text-contain\">\n\t\t\t\t<h1 className=\"Text\">Мероприятия</h1>\n\t\t\t</div>\n\t\t\t<div className=\"Event-contain\" onClick={go}  data-to=\"persik\">\n\t\t\t\t<img className=\"Img\" src={plus}/>\n\t\t\t\t<h1 className=\"create\">Создать</h1>\n\t\t\t</div>\n\t\t\t<div className=\"Event-contain\" onClick={go}  data-to=\"persik\">\n\t\t\t\t<img className=\"Name\" src={persik} alt=\"Persik The Cat\"/>\n\t\t\t\t<h1 className=\"Create\">Название</h1>\n\t\t\t\t<h2 className=\"Descr\">Описание</h2>\n\t\t\t</div>\n\t\t</div>\n\t</Panel>\n);\n\nOrgMain.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default OrgMain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n// import PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n// import Button from '@vkontakte/vkui/dist/components/Button/Button';\n// import Group from '@vkontakte/vkui/dist/components/Group/Group';\n// import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n// import Div from '@vkontakte/vkui/dist/components/Div/Div';\n// import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport persik from '../img/persik.png';\nimport './Org_main.css';\n\nconst OrgMain = ({ id, go}) => (\n\t<Panel id={id}>\n\t\t<div className=\"Wrapper\">\n\t\t\t<div className=\"Text-contain\">\n\t\t\t\t<h1 className=\"Text\">Мероприятия</h1>\n\t\t\t</div>\n\t\t\t<div className=\"Event-contain\" onClick={go}  data-to=\"persik\">\n\t\t\t\t<img className=\"Img\" src={persik} alt=\"Persik The Cat\"/>\n\t\t\t\t<h1 className=\"create\">Создать</h1>\n\t\t\t</div>\n\t\t\t<div className=\"Event-contain\" onClick={go}  data-to=\"persik\">\n\t\t\t\t<img className=\"Name\" src={persik} alt=\"Persik The Cat\"/>\n\t\t\t\t<h1 className=\"Create\">Название</h1>\n\t\t\t\t<h2 className=\"Descr\">Описание</h2>\n\t\t\t</div>\n\t\t</div>\n\t</Panel>\n);\n\nOrgMain.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default OrgMain;\n","// import React, { useState, useEffect } from 'react';\n// import connect from '@vkontakte/vk-connect';\n// import View from '@vkontakte/vkui/dist/components/View/View';\n// import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\n// import '@vkontakte/vkui/dist/vkui.css';\n\n// import Start from './panels/Start';\n// import OrgMain from './panels/Org_main';\n// import Persik from './panels/Persik';\n\n// import axios from 'axios'\n\n// const App = () => {\n// \t//Посылаем запрос на сервер заходил ли человек\n// \t//если да, то start = 'org/vol'\n// \t//иначе start = 'start'\n// \tvar start = 'start';\n// \tconst [activePanel, setActivePanel] = useState('start');\n// \tconst [fetchedUser, setUser] = useState(null);\n// \tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n// \tuseEffect(() => {\n// \t\tconnect.subscribe(({ detail: { type, data }}) => {\n// \t\t\tif (type === 'VKWebAppUpdateConfig') {\n// \t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n// \t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n// \t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n// \t\t\t}\n// \t\t});\n// \t\tasync function fetchData() {\n// \t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n// \t\t\tsetUser(user);\n// \t\t\tconsole.log(fetchedUser);\n// \t\t\taxios.get(\"http://yantar.in:5000/api/recipes\")\n// \t\t\t.then(res=>{\n// \t\t\t\tconsole.log(res);\n// \t\t\t})\n// \t\t\tsetPopout(null);\n// \t\t}\n// \t\tfetchData();\n// \t}, []);\n\n// \tconst go = e => {\n// \t\tif (e.currentTarget.dataset.to === 'orgMain')\n// \t\t\tconsole.log(fetchedUser);\n// \t\tsetActivePanel(e.currentTarget.dataset.to);\n// \t\t// axios.post(\"url\", {fetchedUser})\n// \t\t// \t.then(res=>{\n// \t\t// \t\tconsole.log(res);\n// \t\t// \t})\n// \t};\n\n// \treturn (\n// \t\t<View activePanel={activePanel}>\n// \t\t\t<Start id='start' fetchedUser={fetchedUser} go={go}/>\n// \t\t\t<Persik id='persik' go={go} />\n// \t\t</View>\n// \t);\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Start from './panels/Start';\nimport VolMain from './panels/Vol_main';\nimport OrgMain from './panels/Org_main';\nimport { Panel } from '@vkontakte/vkui';\nimport axios from 'axios';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('start');\n\tconst [fetchedUser, setUser] = useState(null);\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\t//setPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst resp = () =>{\n\t\taxios.post(\"https://vkmanage.herokuapp.com/volunteers/echo/\", {fetchedUser})\n\t\t\t.then(res=>{\n\t\t\t\tconsole.log(res);\n\t\t\t})\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} history={[activePanel]}/*popout={popout}*/>\n\t\t\t<Start id='start' fetchedUser={fetchedUser} go={go} resp={resp}/>\n\t\t\t<VolMain id='volMain' go={go} />\n\t\t\t<OrgMain id='orgMain' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/plus.70be916a.svg\";"],"sourceRoot":""}